.gamePageContainer {
  min-width: 100vw;
  min-height: 100vh;
  width: fit-content;
  background-color: rgb(165, 165, 165);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.board {
  width: min(80vw, 80vh);
  height: min(80vw, 80vh);
  margin: min(5vw, 5vh, 25px);
  background-color: rgb(61, 55, 55);
  display: flex;
  flex-wrap: wrap;
  box-shadow: 1px 1px 1px rgb(66, 66, 66);
  box-shadow: 2px 2px 1px rgb(66, 66, 66);
  transition: box-shadow 0.3s ease-in-out;
}

.board:hover {
  box-shadow: 1px 1px 1px rgb(66, 66, 66);
  box-shadow: 2px 2px 1px rgb(66, 66, 66);
  box-shadow: 3px 3px 1px rgb(66, 66, 66);
  box-shadow: 4px 4px 1px rgb(66, 66, 66);
  box-shadow: 5px 5px 1px rgb(66, 66, 66);
  box-shadow: 6px 6px 1px rgb(66, 66, 66);
  box-shadow: 7px 7px 1px rgb(66, 66, 66);
  box-shadow: 8px 8px 1px rgb(66, 66, 66);
  transition: box-shadow 0.3s ease-in-out;
}

.square {
  width: min(10vw, 10vh);
  height: min(10vw, 10vh);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  box-shadow: inset 0px 0px 5px 1px rgb(0, 0, 0);
}

.rotate180 {
  transform: rotateX(180deg);
}

.rotate180 .square {
  transform: rotateX(180deg);
}
.square[colour="1"] {
  background-color: rgb(167, 148, 148);
}

.square[colour="0"] {
  background-color: rgb(255, 255, 255);
}

.square img {
  width: 80%;
  height: 80%;
  pointer-events: none;
}

.full {
  width: 100%;
  height: 100%;
  opacity: 0.99;
  display: flex;
  align-items: center;
  justify-content: center;
}

.turn.square[piece="1"]:hover,
.turn.square[piece="1"].hovered {
  box-shadow: inset 0px 0px 5px 2px rgb(177, 173, 119);
  transition: box-shadow 0.5s ease-in-out;
  cursor: pointer;
}

.turn.square[piece="1"].clicked {
  box-shadow: inset 0px 0px 5px 2px rgb(177, 173, 119);
  transition: box-shadow 0.5s ease-in-out;
}

.turn.square[piece="1"].clicked:hover,
.turn.square[piece="1"].clicked.hovered {
  box-shadow: inset 0px 0px 5px 4px rgb(177, 173, 119);
  transition: box-shadow 0.3s ease-in-out;
}

.possibleMove {
  box-shadow: inset 0px 0px 5px 2px rgb(27, 86, 196);
  transition: box-shadow 0.5s ease-in-out;
  cursor: pointer;
}

.possibleMove:hover,
.possibleMove.hovered {
  box-shadow: inset 0px 0px 5px 4px rgb(27, 86, 196);
  transition: box-shadow 0.3s ease-in-out;
  cursor: pointer;
}

.possibleMove.castleMove {
  box-shadow: inset 0px 0px 5px 2px rgb(132, 255, 204);
  transition: box-shadow 0.5s ease-in-out;
  cursor: pointer;
}

.castleMove::before {
  font-weight: bold;
  color: rgb(0, 163, 95);
  content: "CASTLE";
  font-size: min(2.25vw, 2.25vh);
}
.possibleMove.castleMove:hover,
.possibleMove.castleMove.hovered {
  box-shadow: inset 0px 0px 5px 4px rgb(132, 255, 204);
  transition: box-shadow 0.3s ease-in-out;
  cursor: pointer;
}

.possibleMove.square[piece="1"] {
  box-shadow: inset 0px 0px 5px 2px rgb(216, 2, 2);
  transition: box-shadow 0.5s ease-in-out;
}

.possibleMove.square[piece="1"]:hover,
.possibleMove.square[piece="1"].hovered {
  box-shadow: inset 0px 0px 5px 4px rgb(216, 2, 2);
  transition: box-shadow 0.5s ease-in-out;
}

.invisible {
  display: none;
}

.disabled {
  pointer-events: none;
}

.infoBoard {
  color: rgb(0, 0, 0);
  font-weight: bold;
  margin: max(2vh, 25px) 0 0 0;
  background-color: rgb(167, 148, 148);
  padding: 3vh 3vw 3vh 3vw;
  min-width: 200px;
  text-align: center;
  box-shadow: 0px 0px 5px rgb(131, 117, 117);
  user-select: none;
  border-radius: 5px;
}
